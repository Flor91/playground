0
00:00:00,000 --> 00:00:01,120


1
00:00:01,120 --> 00:00:03,260
Files are named sequence of bytes.

2
00:00:03,260 --> 00:00:06,990
They're typically stored as a collection of pages or blocks.

3
00:00:06,990 --> 00:00:08,800
A file system is a collection of files

4
00:00:08,800 --> 00:00:11,060
organized within a hierarchical namespace.

5
00:00:11,060 --> 00:00:13,500
And a file system is responsible for laying out

6
00:00:13,500 --> 00:00:17,090
those bytes on physical media, storing the file metadata,

7
00:00:17,090 --> 00:00:19,270
and providing an application programming interface

8
00:00:19,270 --> 00:00:21,140
for interaction with files.

9
00:00:21,140 --> 00:00:28,310
API operations include open, close, seek, read, and write.

10
00:00:28,310 --> 00:00:31,440
Now, files are organized in a hierarchical namespace.

11
00:00:31,440 --> 00:00:34,690
In Linux, forward slash is the root of a file system.

12
00:00:34,690 --> 00:00:38,480
And on Windows, backslash is the root of a file system.

13
00:00:38,480 --> 00:00:41,426
Files and directories have associated permissions,

14
00:00:41,426 --> 00:00:43,800
but it's important to recognize that files are not always

15
00:00:43,800 --> 00:00:47,050
necessarily arranged in a hierarchical namespace.

16
00:00:47,050 --> 00:00:49,160
For example, in content addressable storage,

17
00:00:49,160 --> 00:00:51,940
which is often used for large multimedia collections,

18
00:00:51,940 --> 00:00:54,930
we refer to the content by its content,

19
00:00:54,930 --> 00:00:58,465
not necessarily by its hierarchical name.

20
00:00:58,465 --> 00:01:00,830
Now, some considerations for a file format

21
00:01:00,830 --> 00:01:03,700
are, what are the data models?

22
00:01:03,700 --> 00:01:06,530
Is it tabular, hierarchical or array?

23
00:01:06,530 --> 00:01:08,130
What is the physical layout?

24
00:01:08,130 --> 00:01:10,830
What are the field units and validation?

25
00:01:10,830 --> 00:01:12,390
What metadata do we need to store?

26
00:01:12,390 --> 00:01:15,220
For example, header, or side file, or specification,

27
00:01:15,220 --> 00:01:16,820
or other information.

28
00:01:16,820 --> 00:01:20,300
What types of data do we want to store in the files?

29
00:01:20,300 --> 00:01:23,130
Are they plain text or binary files?

30
00:01:23,130 --> 00:01:25,570
What do we use as delimiters for fields?

31
00:01:25,570 --> 00:01:29,140
And how do we escape special content or characters?

32
00:01:29,140 --> 00:01:31,420
Are the files compressed or do they use encryption?

33
00:01:31,420 --> 00:01:33,290
Or do we have checksums that we can

34
00:01:33,290 --> 00:01:35,210
use to validate that the files have not

35
00:01:35,210 --> 00:01:37,890
been tampered with or damaged?

36
00:01:37,890 --> 00:01:41,290
And finally, how do we evolve the format or the schema

37
00:01:41,290 --> 00:01:43,033
for the file?

38
00:01:43,033 --> 00:01:43,533


